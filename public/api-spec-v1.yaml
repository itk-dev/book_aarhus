openapi: 3.0.3
info:
  title: 'Book Aarhus API Service'
  description: 'API Service for Book Aarhus'
  license:
    name: MIT
  version: '1'
servers:
  -
    url: /
    description: ''
paths:
  /v1/bookings:
    post:
      operationId: postBookingCollection
      tags:
        - Booking
      responses:
        201:
          description: 'Booking resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Booking.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
            text/html:
              schema:
                $ref: '#/components/schemas/Booking'
          links:
            GetBookingItem:
              operationId: getBookingItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /v1/bookings/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Booking resource.'
      description: 'Creates a Booking resource.'
      parameters: []
      requestBody:
        description: 'The new Booking resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Booking.BookingInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Booking.BookingInput'
          text/html:
            schema:
              $ref: '#/components/schemas/Booking.BookingInput'
        required: true
      deprecated: false
    parameters: []
  /v1/bookings-webform:
    post:
      operationId: post-v1-create-booking-webform-submit
      tags:
        - Booking
      responses:
        201:
          description: Created
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Create a booking from a Drupal Webform submit.'
      description: 'Create a booking from a Drupal Webform submit.'
      parameters: []
      requestBody:
        description: 'The new Booking resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Booking.WebformBookingInput.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Booking.WebformBookingInput'
          text/html:
            schema:
              $ref: '#/components/schemas/Booking.WebformBookingInput'
        required: true
      deprecated: false
    parameters: []
  '/v1/bookings/{id}':
    get:
      operationId: getBookingItem
      tags:
        - Booking
      responses:
        204:
          description: 'Booking resource'
          content:
            application/ld+json:
              schema: {  }
            application/json:
              schema: {  }
            text/html:
              schema: {  }
        404:
          description: 'Resource not found'
      summary: 'Unsupported action.'
      description: 'Unsupported action.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /v1/busy-intervals:
    get:
      operationId: get-v1-busy-intervals
      tags:
        - BusyInterval
      responses:
        200:
          description: OK
          content:
            application/ld+json:
              examples: null
          headers: {  }
      summary: 'Retrieves busy intervals.'
      description: 'Retrieves busy intervals.'
      parameters:
        -
          name: resources
          in: query
          description: 'Array of resources to request busy intervals for.'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
              example: test@bookaarhus.local.itkdev.dk
          style: form
          explode: false
          allowReserved: false
        -
          name: dateStart
          in: query
          description: 'Start time for the search interval (DateTime. Expected format: "2022-05-30T17:32:28Z")'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            format: date-time
            example: '2022-05-30T17:32:28Z'
          style: form
          explode: false
          allowReserved: false
        -
          name: dateEnd
          in: query
          description: 'End time for the search interval (DateTime. Expected format: "2022-05-30T17:32:28Z")'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            format: date-time
            example: '2022-06-22T17:32:28Z'
          style: form
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/v1/busy-intervals/{id}':
    get:
      operationId: getBusyIntervalItem
      tags:
        - BusyInterval
      responses:
        204:
          description: 'BusyInterval resource'
          content:
            application/ld+json:
              schema: {  }
            application/json:
              schema: {  }
            text/html:
              schema: {  }
        404:
          description: 'Resource not found'
      summary: 'Unsupported action.'
      description: 'Unsupported action.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /v1/locations:
    get:
      operationId: get-v1-locations
      tags:
        - Location
      responses:
        200:
          description: OK
          content:
            application/ld+json:
              examples: null
          headers: {  }
      summary: 'Retrieves locations.'
      description: 'Retrieves locations.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/v1/locations/{name}':
    get:
      operationId: getLocationItem
      tags:
        - Location
      responses:
        204:
          description: 'Location resource'
          content:
            application/ld+json:
              schema: {  }
            application/json:
              schema: {  }
            text/html:
              schema: {  }
        404:
          description: 'Resource not found'
      summary: 'Unsupported action.'
      description: 'Unsupported action.'
      parameters:
        -
          name: name
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /v1/resources:
    get:
      operationId: getResourceCollection
      tags:
        - Resource
      responses:
        200:
          description: 'Resource collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Resource.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
      summary: 'Retrieves the collection of Resource resources.'
      description: 'Retrieves the collection of Resource resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/v1/resources/{id}':
    get:
      operationId: getResourceItem
      tags:
        - Resource
      responses:
        200:
          description: 'Resource resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Resource.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            text/html:
              schema:
                $ref: '#/components/schemas/Resource'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Resource resource.'
      description: 'Retrieves a Resource resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /v1/user-bookings:
    get:
      operationId: get-v1-bookings
      tags:
        - UserBooking
      responses:
        200:
          description: OK
          content:
            application/ld+json:
              examples: null
          headers: {  }
      summary: 'Retrieves user bookings from a specific user.'
      description: 'Retrieves user bookings from a specific user.'
      parameters:
        -
          name: userId
          in: query
          description: 'ID of the user to retrieve bookings for'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            format: string
            example: '1'
          style: form
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/v1/user-bookings/{id}':
    get:
      operationId: get-v1-booking
      tags:
        - UserBooking
      responses:
        200:
          description: OK
          content:
            application/ld+json:
              examples: null
          headers: {  }
        404:
          description: 'Resource not found'
      summary: 'Retrieves a specific booking from a specific user.'
      description: 'Retrieves a specific booking from a specific user.'
      parameters:
        -
          name: id
          in: path
          description: 'urlencoded ID of the booking to get'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            format: string
            example: AAMkADA2YjNjYzNjLThjMjAtNDA3MS05NWEwLTZhZjM2MzYxZjZmNwBGAAAAAADPMx9il%2Fl3TpK5N7vcXYJbBwCTGBSNlZNgQKMu0%2BOa3o5eAAAAAAENAACTGBSNlZNgQKMu0%2BOa3o5eAABLCAbAAAA%3D
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: delete-v1-booking
      tags:
        - UserBooking
      responses:
        204:
          description: 'UserBooking resource deleted'
        404:
          description: 'Resource not found'
        200:
          description: OK
          content:
            application/ld+json:
              examples: null
          headers: {  }
      summary: 'Requests deletion for a specific booking.'
      description: 'Requests deletion for a specific booking.'
      parameters:
        -
          name: id
          in: path
          description: 'urlencoded ID of the booking to delete'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            format: string
            example: ''
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
components:
  schemas:
    Booking:
      type: object
      properties:
        id:
          type: string
        resourceEmail:
          type: string
        resourceName:
          type: string
        subject:
          type: string
        body:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    Booking.BookingInput:
      type: object
      properties:
        resourceEmail:
          type: string
        resourceName:
          type: string
        subject:
          type: string
        body:
          type: string
        startTime:
          type: string
        endTime:
          type: string
    Booking.BookingInput.jsonld:
      type: object
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        resourceEmail:
          type: string
        resourceName:
          type: string
        subject:
          type: string
        body:
          type: string
        startTime:
          type: string
        endTime:
          type: string
    Booking.WebformBookingInput:
      type: object
      properties:
        data:
          default:
            webform:
              id: ''
            submission:
              uuid: ''
          example:
            webform:
              id: ''
            submission:
              uuid: ''
          type: array
          items:
            type: string
        links:
          default:
            sender: ''
            get_submission_url: ''
          example:
            sender: ''
            get_submission_url: ''
          type: array
          items:
            type: string
    Booking.WebformBookingInput.jsonld:
      type: object
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        data:
          default:
            webform:
              id: ''
            submission:
              uuid: ''
          example:
            webform:
              id: ''
            submission:
              uuid: ''
          type: array
          items:
            type: string
        links:
          default:
            sender: ''
            get_submission_url: ''
          example:
            sender: ''
            get_submission_url: ''
          type: array
          items:
            type: string
    Booking.jsonld:
      type: object
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          type: string
        resourceEmail:
          type: string
        resourceName:
          type: string
        subject:
          type: string
        body:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    BusyInterval:
      type: object
      properties:
        id:
          type: string
        resource:
          type: string
        startTime:
          type: string
          format: date-time
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
    BusyInterval.jsonld:
      type: object
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          type: string
        resource:
          type: string
        startTime:
          type: string
          format: date-time
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
    Location:
      type: object
      properties:
        name:
          type: string
    Location.jsonld:
      type: object
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
    Resource:
      type: object
      description: Extbooking.aakresources.
      properties:
        id:
          readOnly: true
          type: integer
        resourcemail:
          type: string
        resourcename:
          type: string
        resourceimage:
          type: string
          nullable: true
        resourceemailtext:
          type: string
        location:
          type: string
        locationtype:
          type: string
        geocordinates:
          type: string
          nullable: true
        capacity:
          type: string
          nullable: true
        type:
          type: string
        resourcedescription:
          type: string
          nullable: true
        wheelchairaccessible:
          type: boolean
        videoconferenceequipment:
          type: boolean
        monitorequipment:
          type: boolean
        bookingrights:
          type: string
        acceptanceflow:
          type: boolean
        openingHours:
          type: string
          nullable: true
        holidayOpeningHours:
          type: string
          nullable: true
        whitelist:
          type: string
          nullable: true
        catering:
          type: boolean
        formid:
          type: string
          nullable: true
        updatetimestamp:
          type: string
          format: date-time
    Resource.jsonld:
      type: object
      description: Extbooking.aakresources.
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: integer
        resourcemail:
          type: string
        resourcename:
          type: string
        resourceimage:
          type: string
          nullable: true
        resourceemailtext:
          type: string
        location:
          type: string
        locationtype:
          type: string
        geocordinates:
          type: string
          nullable: true
        capacity:
          type: string
          nullable: true
        type:
          type: string
        resourcedescription:
          type: string
          nullable: true
        wheelchairaccessible:
          type: boolean
        videoconferenceequipment:
          type: boolean
        monitorequipment:
          type: boolean
        bookingrights:
          type: string
        acceptanceflow:
          type: boolean
        openingHours:
          type: string
          nullable: true
        holidayOpeningHours:
          type: string
          nullable: true
        whitelist:
          type: string
          nullable: true
        catering:
          type: boolean
        formid:
          type: string
          nullable: true
        updatetimestamp:
          type: string
          format: date-time
    UserBooking:
      type: object
      properties:
        id:
          type: string
        hitId:
          type: string
        iCalUId:
          type: string
        summary:
          type: string
        subject:
          type: string
        displayName:
          type: string
        body:
          type: string
        status:
          type: string
        start:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
    UserBooking.jsonld:
      type: object
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          type: string
        hitId:
          type: string
        iCalUId:
          type: string
        summary:
          type: string
        subject:
          type: string
        displayName:
          type: string
        body:
          type: string
        status:
          type: string
        start:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes:
    apiKey:
      type: apiKey
      description: 'Value for the Authorization header parameter.'
      name: Authorization
      in: header
security:
  -
    apiKey: []
tags: []
