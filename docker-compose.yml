# itk-version: 2.0.1
version: "3"

networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  mariadb:
    image: itkdev/mariadb:latest
    networks:
      - app
    ports:
      - '3306'
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=db
      - MYSQL_PASSWORD=db
      - MYSQL_DATABASE=db
      #- ENCRYPT=1 # Uncomment to enable database encryption.

  azure-sql:
    image: mcr.microsoft.com/azure-sql-edge:latest
    networks:
      - app
    ports:
      - '1433'
    environment:
      # Database user: sa
      MSSQL_SA_PASSWORD: P@ssword123 # (Minimum length 8 characters, strength required)
      ACCEPT_EULA: Y

  phpfpm:
    build: itkdev/php8.1-fpm:latest
    networks:
      - app
      - frontend
    environment:
      - XDEBUG_MODE=${XDEBUG_MODE:-off}
      - XDEBUG_SESSION=${XDEBUG_SESSION:-0}
      - PHP_MAX_EXECUTION_TIME=30
      - PHP_MEMORY_LIMIT=256M
#      - PHP_MAIL=1 # Uncomment to enable mailhog.
      - DOCKER_HOST_DOMAIN=${COMPOSE_DOMAIN}
      - COMPOSER_VERSION=2
    extra_hosts:
        # Used by ssh tunnel to Azure SQL Server
        #
        # Run these commands to make it actually work:
        #
        ## Copy ssh keys to container
        # $ docker-compose exec phpfpm mkdir -p /root/.ssh
        # $ docker-compose cp ~/.ssh/id_rsa phpfpm:/root/.ssh/id_rsa
        # $ docker-compose cp ~/.ssh/id_rsa-cert.pub phpfpm:/root/.ssh/id_rsa-cert.pub
        ## Create ssh tunnel using IPv4 (`-4`)
        # $ docker-compose exec phpfpm ssh -4 -f deploy@admwebstgitk01.admnonwin.aarhuskommune.dk -L 1433:externalbooking.database.windows.net:1433 -N
        - "externalbooking.database.windows.net:127.0.0.1"
    depends_on:
      - mariadb
      - azure-sql
    volumes:
      - nfsApp:/app:delegated

  nginx:
    image: nginx:latest
    networks:
      - app
      - frontend
    depends_on:
      - phpfpm
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - nfsApp:/app:delegated
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN}`)"
#      HTTPS config - uncomment to enable redirect from :80 to :443
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  rabbit:
    image: rabbitmq:3.9-management
    networks:
      - app
      - frontend
    ports:
      - "15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_ERLANG_COOKIE='d53f319cd7376f8f840aaf9889f315ab'

#  mailhog:
#    image: mailhog/mailhog
#    networks:
#      - app
#      - frontend
#    ports:
#      - "1025"
#      - "8025"
#    labels:
#      - "traefik.enable=true"
#      - "traefik.docker.network=frontend"
#      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${COMPOSE_DOMAIN}`)"

volumes:
  # Named volume requires that you have NFS shares enabled (performance boost on Macs).
  # Use `itkdev-docker-compose nfs:enable` to enable NFS shares. If you don't want to use it remove it from here and
  # change the volume mapping to use normal shares in the containers. See
  # https://sean-handley.medium.com/how-to-set-up-docker-for-mac-with-native-nfs-145151458adc
  nfsApp:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":$PWD"
